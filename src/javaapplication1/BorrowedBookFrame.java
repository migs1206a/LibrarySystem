/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication1;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JCheckBox;
import java.util.HashMap;
import java.util.Map;
import java.util.ArrayList;
import java.util.List;
import java.sql.Statement;

public class BorrowedBookFrame extends javax.swing.JFrame {

    /**
     * Creates new form BorrowedBookFrame
     */
    public BorrowedBookFrame() {
        initComponents();
         disableUnavailableBooks();
        if(LibrarySystem.SelectedBooks.contains("Mathematics")){
              jCheckBox1.setEnabled(false);
         }
         if(LibrarySystem.SelectedBooks.contains("Science")){
              jCheckBox2.setEnabled(false);
         }
          if(LibrarySystem.SelectedBooks.contains("English")){
              jCheckBox3.setEnabled(false);
         }
           if(LibrarySystem.SelectedBooks.contains("The Great Gatsby")){
              jCheckBox6.setEnabled(false);
         }
           
           if(LibrarySystem.SelectedBooks.contains("Harry Potter")){
              jCheckBox9.setEnabled(false);
         }
            if(LibrarySystem.SelectedBooks.contains("Hunger Games")){
              jCheckBox10.setEnabled(false);
         }
            if(LibrarySystem.SelectedBooks.contains("To Kill a Mockingbird")){
              jCheckBox11.setEnabled(false);
         }
             if(LibrarySystem.SelectedBooks.contains("In Cold Blood")){
              jCheckBox7.setEnabled(false);
         }
             if(LibrarySystem.SelectedBooks.contains("World War")){
              jCheckBox8.setEnabled(false);
         }
           
          ConfirmBtn.setEnabled(false);
          PanelAcademics.setVisible(false);
          PanelFiction.setVisible(false);
          PanelNonFiction.setVisible(false);
        
    }

     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jCheckBox4 = new javax.swing.JCheckBox();
        BackBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        CategoryPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        Acad = new javax.swing.JRadioButton();
        fiction = new javax.swing.JRadioButton();
        nonfiction = new javax.swing.JRadioButton();
        PanelNonFiction = new javax.swing.JPanel();
        jCheckBox7 = new javax.swing.JCheckBox();
        jCheckBox8 = new javax.swing.JCheckBox();
        jCheckBox12 = new javax.swing.JCheckBox();
        PanelFiction = new javax.swing.JPanel();
        jCheckBox6 = new javax.swing.JCheckBox();
        jCheckBox9 = new javax.swing.JCheckBox();
        jCheckBox10 = new javax.swing.JCheckBox();
        jCheckBox11 = new javax.swing.JCheckBox();
        PanelAcademics = new javax.swing.JPanel();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        ConfirmBtn = new javax.swing.JButton();
        Course = new javax.swing.JTextField();
        StudentName = new javax.swing.JTextField();
        YearAndSection = new javax.swing.JTextField();

        jCheckBox4.setText("jCheckBox4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        BackBtn.setBackground(new java.awt.Color(255, 255, 0));
        BackBtn.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        BackBtn.setText("Back");
        BackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 48)); // NOI18N
        jLabel1.setText("Borrow Book");

        CategoryPanel.setBackground(new java.awt.Color(0, 51, 153));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Categories");

        Acad.setBackground(new java.awt.Color(204, 204, 204));
        buttonGroup1.add(Acad);
        Acad.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        Acad.setText("Academics");
        Acad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AcadActionPerformed(evt);
            }
        });

        fiction.setBackground(new java.awt.Color(204, 204, 204));
        buttonGroup1.add(fiction);
        fiction.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        fiction.setText("Fiction");
        fiction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fictionActionPerformed(evt);
            }
        });

        nonfiction.setBackground(new java.awt.Color(204, 204, 204));
        buttonGroup1.add(nonfiction);
        nonfiction.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        nonfiction.setText("Non Fiction");
        nonfiction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nonfictionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CategoryPanelLayout = new javax.swing.GroupLayout(CategoryPanel);
        CategoryPanel.setLayout(CategoryPanelLayout);
        CategoryPanelLayout.setHorizontalGroup(
            CategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CategoryPanelLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(CategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(fiction, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Acad, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nonfiction, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        CategoryPanelLayout.setVerticalGroup(
            CategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CategoryPanelLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel2)
                .addGap(36, 36, 36)
                .addComponent(Acad)
                .addGap(18, 18, 18)
                .addComponent(fiction)
                .addGap(18, 18, 18)
                .addComponent(nonfiction)
                .addContainerGap(144, Short.MAX_VALUE))
        );

        PanelNonFiction.setBackground(new java.awt.Color(255, 255, 0));

        jCheckBox7.setBackground(new java.awt.Color(204, 204, 204));
        jCheckBox7.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jCheckBox7.setText("In Cold Blood");
        jCheckBox7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox7ActionPerformed(evt);
            }
        });

        jCheckBox8.setBackground(new java.awt.Color(204, 204, 204));
        jCheckBox8.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jCheckBox8.setText("World War");
        jCheckBox8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox8ActionPerformed(evt);
            }
        });

        jCheckBox12.setBackground(new java.awt.Color(204, 204, 204));
        jCheckBox12.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jCheckBox12.setText("Into Thin Air");
        jCheckBox12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox12ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelNonFictionLayout = new javax.swing.GroupLayout(PanelNonFiction);
        PanelNonFiction.setLayout(PanelNonFictionLayout);
        PanelNonFictionLayout.setHorizontalGroup(
            PanelNonFictionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelNonFictionLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(PanelNonFictionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox8)
                    .addComponent(jCheckBox7)
                    .addComponent(jCheckBox12))
                .addContainerGap(427, Short.MAX_VALUE))
        );
        PanelNonFictionLayout.setVerticalGroup(
            PanelNonFictionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelNonFictionLayout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(jCheckBox7)
                .addGap(18, 18, 18)
                .addComponent(jCheckBox8)
                .addGap(18, 18, 18)
                .addComponent(jCheckBox12)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        PanelFiction.setBackground(new java.awt.Color(0, 204, 0));

        jCheckBox6.setBackground(new java.awt.Color(0, 204, 51));
        jCheckBox6.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jCheckBox6.setText("The Great Gatsby");
        jCheckBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox6ActionPerformed(evt);
            }
        });

        jCheckBox9.setBackground(new java.awt.Color(0, 204, 51));
        jCheckBox9.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jCheckBox9.setText("Harry Potter");
        jCheckBox9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox9ActionPerformed(evt);
            }
        });

        jCheckBox10.setBackground(new java.awt.Color(0, 204, 51));
        jCheckBox10.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jCheckBox10.setText("Hunger Games");
        jCheckBox10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox10ActionPerformed(evt);
            }
        });

        jCheckBox11.setBackground(new java.awt.Color(0, 204, 51));
        jCheckBox11.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jCheckBox11.setText("To Kill a Mockingbird");
        jCheckBox11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox11ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelFictionLayout = new javax.swing.GroupLayout(PanelFiction);
        PanelFiction.setLayout(PanelFictionLayout);
        PanelFictionLayout.setHorizontalGroup(
            PanelFictionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelFictionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelFictionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelFictionLayout.createSequentialGroup()
                        .addGroup(PanelFictionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox11)
                            .addComponent(jCheckBox10))
                        .addGap(103, 319, Short.MAX_VALUE))
                    .addGroup(PanelFictionLayout.createSequentialGroup()
                        .addGroup(PanelFictionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox6)
                            .addComponent(jCheckBox9))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        PanelFictionLayout.setVerticalGroup(
            PanelFictionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelFictionLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jCheckBox6)
                .addGap(17, 17, 17)
                .addComponent(jCheckBox9)
                .addGap(18, 18, 18)
                .addComponent(jCheckBox10)
                .addGap(18, 18, 18)
                .addComponent(jCheckBox11)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        PanelAcademics.setBackground(new java.awt.Color(255, 255, 0));

        jCheckBox3.setBackground(new java.awt.Color(255, 255, 0));
        jCheckBox3.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jCheckBox3.setText("English");
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });

        jCheckBox2.setBackground(new java.awt.Color(255, 255, 0));
        jCheckBox2.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jCheckBox2.setText("Science");

        jCheckBox1.setBackground(new java.awt.Color(255, 255, 0));
        jCheckBox1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jCheckBox1.setText("Mathematics");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelAcademicsLayout = new javax.swing.GroupLayout(PanelAcademics);
        PanelAcademics.setLayout(PanelAcademicsLayout);
        PanelAcademicsLayout.setHorizontalGroup(
            PanelAcademicsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelAcademicsLayout.createSequentialGroup()
                .addGroup(PanelAcademicsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox3, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(0, 455, Short.MAX_VALUE))
        );
        PanelAcademicsLayout.setVerticalGroup(
            PanelAcademicsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelAcademicsLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox3)
                .addContainerGap(152, Short.MAX_VALUE))
        );

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 48)); // NOI18N
        jLabel4.setText("Available Books");

        ConfirmBtn.setBackground(new java.awt.Color(0, 102, 0));
        ConfirmBtn.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        ConfirmBtn.setForeground(new java.awt.Color(255, 255, 255));
        ConfirmBtn.setText("Confirm");
        ConfirmBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmBtnActionPerformed(evt);
            }
        });

        Course.setBackground(new java.awt.Color(204, 204, 204));
        Course.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        Course.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Course", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18))); // NOI18N

        StudentName.setBackground(new java.awt.Color(204, 204, 204));
        StudentName.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        StudentName.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Student Name", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18))); // NOI18N

        YearAndSection.setBackground(new java.awt.Color(204, 204, 204));
        YearAndSection.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        YearAndSection.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Year and Section", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ConfirmBtn)
                .addGap(23, 23, 23))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 604, Short.MAX_VALUE)
                .addComponent(BackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(1, 7, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(StudentName, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(10, 10, 10)
                            .addComponent(YearAndSection, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(10, 10, 10)
                            .addComponent(Course, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(CategoryPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(20, 20, 20)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4)
                                .addComponent(PanelNonFiction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(PanelFiction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(PanelAcademics, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGap(0, 3, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(BackBtn))
                    .addComponent(jLabel1))
                .addGap(162, 162, 162)
                .addComponent(ConfirmBtn)
                .addContainerGap(364, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap(94, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(StudentName, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(YearAndSection, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Course, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(20, 20, 20)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(CategoryPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addComponent(jLabel4)
                            .addGap(14, 14, 14)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(PanelAcademics, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(PanelNonFiction, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(PanelFiction, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGap(0, 2, Short.MAX_VALUE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackBtnActionPerformed
        MainMenu back = new MainMenu();
        back.setVisible(true);
        this.dispose(); 
    }//GEN-LAST:event_BackBtnActionPerformed

    private void AcadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AcadActionPerformed
        ConfirmBtn.setEnabled(true);
        PanelAcademics.setVisible(true);
        PanelFiction.setVisible(false);
        PanelNonFiction.setVisible(false);
    }//GEN-LAST:event_AcadActionPerformed

    private void fictionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fictionActionPerformed
        ConfirmBtn.setEnabled(true);
        PanelAcademics.setVisible(false);
        PanelFiction.setVisible(true);
        PanelNonFiction.setVisible(false);
    }//GEN-LAST:event_fictionActionPerformed

    private void jCheckBox7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox7ActionPerformed

    private void jCheckBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox6ActionPerformed

    private void ConfirmBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmBtnActionPerformed
  String studentName = StudentName.getText().trim();
    String yearSection = YearAndSection.getText().trim();
    String course = Course.getText().trim();

    if (studentName.isEmpty() || yearSection.isEmpty() || course.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please fill out Student Name, Year and Section, and Course.");
        return;
    }
         List<String> selectedBooks = new ArrayList<>();

    if (jCheckBox1.isSelected()) selectedBooks.add(jCheckBox1.getText());
    if (jCheckBox2.isSelected()) selectedBooks.add(jCheckBox2.getText());
    if (jCheckBox3.isSelected()) selectedBooks.add(jCheckBox3.getText());
    if (jCheckBox6.isSelected()) selectedBooks.add(jCheckBox6.getText());
    if (jCheckBox7.isSelected()) selectedBooks.add(jCheckBox7.getText());
    if (jCheckBox8.isSelected()) selectedBooks.add(jCheckBox8.getText());
    if (jCheckBox9.isSelected()) selectedBooks.add(jCheckBox9.getText());
    if (jCheckBox10.isSelected()) selectedBooks.add(jCheckBox10.getText());
    if (jCheckBox11.isSelected()) selectedBooks.add(jCheckBox11.getText());

    if (selectedBooks.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please select at least one book.");
        return;
    }

    int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to borrow these books?", "Confirm", JOptionPane.YES_NO_OPTION);
    if (confirm == JOptionPane.YES_OPTION) {
        handleBookBorrowing(
            selectedBooks,
            StudentName.getText(),
            YearAndSection.getText(),
            Course.getText()
        );
    }
    disableUnavailableBooks();
}        
private void handleBookBorrowing(List<String> selectedTitles, String name, String section, String course) {
    Connection conn = null;
    try {
        conn = DBConnection.getConnection();  // use your existing class
        conn.setAutoCommit(false);

        int studentId = getOrInsertStudent(conn, name, section, course);

        for (String title : selectedTitles) {
            int bookId = getAvailableBookId(conn, title);
            insertBorrowTransaction(conn, studentId, bookId);
            markBookAsUnavailable(conn, bookId);
        }

        conn.commit();
        JOptionPane.showMessageDialog(this, "Books successfully borrowed!");
        // optionally: open ReturnedBookFrame here
    } catch (Exception e) {
        try { if (conn != null) conn.rollback(); } catch (SQLException ignored) {}
        JOptionPane.showMessageDialog(this, "Borrow failed: " + e.getMessage());
    } finally {
        try { if (conn != null) conn.close(); } catch (SQLException ignored) {}
    }
}
private int getOrInsertStudent(Connection conn, String name, String section, String course) throws SQLException {
    String find = "SELECT student_id FROM Student WHERE name = ? AND year_and_section = ? AND course = ?";
    try (PreparedStatement ps = conn.prepareStatement(find)) {
        ps.setString(1, name);
        ps.setString(2, section);
        ps.setString(3, course);
        ResultSet rs = ps.executeQuery();
        if (rs.next()) return rs.getInt("student_id");
    }

    String insert = "INSERT INTO Student (name, year_and_section, course) VALUES (?, ?, ?)";
    try (PreparedStatement ps = conn.prepareStatement(insert, Statement.RETURN_GENERATED_KEYS)) {
        ps.setString(1, name);
        ps.setString(2, section);
        ps.setString(3, course);
        ps.executeUpdate();
        ResultSet rs = ps.getGeneratedKeys();
        if (rs.next()) return rs.getInt(1);
    }

    throw new SQLException("Unable to insert student");
}

private int getAvailableBookId(Connection conn, String title) throws SQLException {
    String sql = "SELECT book_id FROM Book WHERE title = ? AND available = TRUE";
    try (PreparedStatement ps = conn.prepareStatement(sql)) {
        ps.setString(1, title);
        ResultSet rs = ps.executeQuery();
        if (rs.next()) return rs.getInt("book_id");
    }
    throw new SQLException("Book not available: " + title);
}

private void insertBorrowTransaction(Connection conn, int studentId, int bookId) throws SQLException {
    String sql = "INSERT INTO BorrowTransaction (student_id, book_id) VALUES (?, ?)";
    try (PreparedStatement ps = conn.prepareStatement(sql)) {
        ps.setInt(1, studentId);
        ps.setInt(2, bookId);
        ps.executeUpdate();
    }
}

private void markBookAsUnavailable(Connection conn, int bookId) throws SQLException {
    String sql = "UPDATE Book SET available = FALSE WHERE book_id = ?";
    try (PreparedStatement ps = conn.prepareStatement(sql)) {
        ps.setInt(1, bookId);
        ps.executeUpdate();
    }
}
private void disableUnavailableBooks() {
    try (Connection conn = DBConnection.getConnection()) {
        String query = "SELECT title, available FROM Book";
        PreparedStatement ps = conn.prepareStatement(query);
        ResultSet rs = ps.executeQuery();

        while (rs.next()) {
            String title = rs.getString("title");
            boolean available = rs.getBoolean("available");

            if (!available) {
                if (jCheckBox1.getText().equals(title)) jCheckBox1.setEnabled(false);
                else if (jCheckBox2.getText().equals(title)) jCheckBox2.setEnabled(false);
                else if (jCheckBox3.getText().equals(title)) jCheckBox3.setEnabled(false);
                else if (jCheckBox6.getText().equals(title)) jCheckBox6.setEnabled(false);
                else if (jCheckBox7.getText().equals(title)) jCheckBox7.setEnabled(false);
                else if (jCheckBox8.getText().equals(title)) jCheckBox8.setEnabled(false);
                else if (jCheckBox9.getText().equals(title)) jCheckBox9.setEnabled(false);
                else if (jCheckBox10.getText().equals(title)) jCheckBox10.setEnabled(false);
                else if (jCheckBox11.getText().equals(title)) jCheckBox11.setEnabled(false);
                else if (jCheckBox12.getText().equals(title)) jCheckBox12.setEnabled(false);
            }
        }
    } catch (SQLException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error checking book availability.");
    }
}



private void Confirmation(){
 
         int choice = JOptionPane.showConfirmDialog(null, "Are you sure you want to confirm?", "", JOptionPane.YES_NO_OPTION);

    if (choice == JOptionPane.YES_OPTION) {
        // Add student information to lists
        LibrarySystem.studname.add(StudentName.getText());
        LibrarySystem.yr.add(YearAndSection.getText());
        LibrarySystem.course.add(Course.getText());

        // Open ReturnedBookFrame
        ReturnedBookFrame ret = new ReturnedBookFrame();
        ret.setVisible(true);
        this.setVisible(false);
    } else if (choice == JOptionPane.NO_OPTION) {
        // Remove selected books from LibrarySystem.SelectedBooks and enable corresponding JCheckBoxes
        if (jCheckBox1.isSelected()) {
            LibrarySystem.SelectedBooks.remove(jCheckBox1.getText());
            jCheckBox1.setEnabled(true);
        }
        if (jCheckBox2.isSelected()) {
            LibrarySystem.SelectedBooks.remove(jCheckBox2.getText());
            jCheckBox2.setEnabled(true);
        }
        if (jCheckBox3.isSelected()) {
            LibrarySystem.SelectedBooks.remove(jCheckBox3.getText());
            jCheckBox3.setEnabled(true);
        }
        if (jCheckBox6.isSelected()) {
            LibrarySystem.SelectedBooks.remove(jCheckBox6.getText());
            jCheckBox6.setEnabled(true);
        }
        if (jCheckBox7.isSelected()) {
            LibrarySystem.SelectedBooks.remove(jCheckBox7.getText());
            jCheckBox7.setEnabled(true);
        }
        if (jCheckBox8.isSelected()) {
            LibrarySystem.SelectedBooks.remove(jCheckBox8.getText());
            jCheckBox8.setEnabled(true);
        }
        if (jCheckBox9.isSelected()) {
            LibrarySystem.SelectedBooks.remove(jCheckBox9.getText());
            jCheckBox9.setEnabled(true);
        }
        if (jCheckBox10.isSelected()) {
            LibrarySystem.SelectedBooks.remove(jCheckBox10.getText());
            jCheckBox10.setEnabled(true);
        }
        if (jCheckBox11.isSelected()) {
            LibrarySystem.SelectedBooks.remove(jCheckBox11.getText());
            jCheckBox11.setEnabled(true);
        }
        if (jCheckBox12.isSelected()) {
            LibrarySystem.SelectedBooks.remove(jCheckBox12.getText());
            jCheckBox12.setEnabled(true);
        }
    }
                         
    }//GEN-LAST:event_ConfirmBtnActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jCheckBox8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox8ActionPerformed

    private void jCheckBox9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox9ActionPerformed

    private void jCheckBox10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox10ActionPerformed

    private void jCheckBox11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox11ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void nonfictionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nonfictionActionPerformed
        ConfirmBtn.setEnabled(true);
        PanelAcademics.setVisible(false);
        PanelFiction.setVisible(false);
        PanelNonFiction.setVisible(true);
    }//GEN-LAST:event_nonfictionActionPerformed

    private void jCheckBox12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox12ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BorrowedBookFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BorrowedBookFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BorrowedBookFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BorrowedBookFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BorrowedBookFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton Acad;
    private javax.swing.JButton BackBtn;
    private javax.swing.JPanel CategoryPanel;
    private javax.swing.JButton ConfirmBtn;
    private javax.swing.JTextField Course;
    private javax.swing.JPanel PanelAcademics;
    private javax.swing.JPanel PanelFiction;
    private javax.swing.JPanel PanelNonFiction;
    private javax.swing.JTextField StudentName;
    private javax.swing.JTextField YearAndSection;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton fiction;
    public static javax.swing.JCheckBox jCheckBox1;
    public static javax.swing.JCheckBox jCheckBox10;
    public static javax.swing.JCheckBox jCheckBox11;
    public static javax.swing.JCheckBox jCheckBox12;
    public static javax.swing.JCheckBox jCheckBox2;
    public static javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    public static javax.swing.JCheckBox jCheckBox6;
    public static javax.swing.JCheckBox jCheckBox7;
    public static javax.swing.JCheckBox jCheckBox8;
    public static javax.swing.JCheckBox jCheckBox9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JRadioButton nonfiction;
    // End of variables declaration//GEN-END:variables
}
